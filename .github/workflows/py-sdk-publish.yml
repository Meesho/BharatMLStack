name: Python SDK Publish to GitHub Registry

on:
  push:
    branches: [master, develop]
    paths: ['py-sdk/**']

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pages: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Determine versions
        id: versions
        run: |
          # Read base versions from VERSION files
          BHARATML_VERSION=$(cat py-sdk/bharatml_commons/VERSION | tr -d '\n' | tr -d ' ')
          SPARK_VERSION=$(cat py-sdk/spark_feature_push_client/VERSION | tr -d '\n' | tr -d ' ')
          GRPC_VERSION=$(cat py-sdk/grpc_feature_client/VERSION | tr -d '\n' | tr -d ' ')
          
          # Strip 'v' prefix if present
          BHARATML_VERSION=${BHARATML_VERSION#v}
          SPARK_VERSION=${SPARK_VERSION#v}
          GRPC_VERSION=${GRPC_VERSION#v}
          
          # Add beta suffix for develop branch
          if [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            BHARATML_VERSION="${BHARATML_VERSION}-beta"
            SPARK_VERSION="${SPARK_VERSION}-beta"
            GRPC_VERSION="${GRPC_VERSION}-beta"
          fi
          
          echo "bharatml_version=$BHARATML_VERSION" >> $GITHUB_OUTPUT
          echo "spark_version=$SPARK_VERSION" >> $GITHUB_OUTPUT
          echo "grpc_version=$GRPC_VERSION" >> $GITHUB_OUTPUT
          echo "release_tag=py-sdk-$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT
          
          echo "bharatml-commons version: $BHARATML_VERSION"
          echo "spark-feature-push-client version: $SPARK_VERSION"
          echo "grpc-feature-client version: $GRPC_VERSION"

      - name: Build all packages
        run: |
          # Create consolidated dist directory
          mkdir -p dist
          rm -rf dist/*
          
          # Build bharatml_commons
          cd py-sdk/bharatml_commons
          rm -rf dist/ build/ *.egg-info/
          python -m build
          cp dist/* ../../dist/
          cd ../..
          
          # Build spark_feature_push_client  
          cd py-sdk/spark_feature_push_client
          rm -rf dist/ build/ *.egg-info/
          python -m build
          cp dist/* ../../dist/
          cd ../..
          
          # Build grpc_feature_client
          cd py-sdk/grpc_feature_client
          rm -rf dist/ build/ *.egg-info/
          python -m build
          cp dist/* ../../dist/
          cd ../..
          
          echo "📦 Built packages:"
          ls -la dist/

      - name: Test package installations
        run: |
          pip install dist/*.whl --force-reinstall --find-links dist/
          
          python -c "
          import bharatml_commons
          import spark_feature_push_client
          import grpc_feature_client
          print('✓ All packages imported successfully')
          "

      - name: Create GitHub Release
        run: |
          gh release create ${{ steps.versions.outputs.release_tag }} \
            dist/*.whl \
            dist/*.tar.gz \
            --title "Python SDK Release - ${{ github.ref_name }}" \
            --notes "## Python SDK Packages

          ### Versions:
          - **bharatml-commons**: \`${{ steps.versions.outputs.bharatml_version }}\`
          - **spark-feature-push-client**: \`${{ steps.versions.outputs.spark_version }}\`
          - **grpc-feature-client**: \`${{ steps.versions.outputs.grpc_version }}\`

          ### Installation:
          \`\`\`bash
          # Download wheel files from this release
          pip install bharatml_commons-${{ steps.versions.outputs.bharatml_version }}-py3-none-any.whl
          pip install spark_feature_push_client-${{ steps.versions.outputs.spark_version }}-py3-none-any.whl  
          pip install grpc_feature_client-${{ steps.versions.outputs.grpc_version }}-py3-none-any.whl
          \`\`\`

          ### Changes:
          - Latest updates from ${{ github.ref_name }} branch" \
            ${{ github.ref == 'refs/heads/develop' && '--prerelease' || '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate summary
        run: |
          echo "## 🐍 Python SDK Published Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Release Tag:** ${{ steps.versions.outputs.release_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Package Versions:" >> $GITHUB_STEP_SUMMARY
          echo "- **bharatml-commons**: \`${{ steps.versions.outputs.bharatml_version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **spark-feature-push-client**: \`${{ steps.versions.outputs.spark_version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **grpc-feature-client**: \`${{ steps.versions.outputs.grpc_version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Links:" >> $GITHUB_STEP_SUMMARY
          echo "- **Release Page**: https://github.com/Meesho/BharatMLStack/releases/tag/${{ steps.versions.outputs.release_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Quick Installation:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "# Download from release and install" >> $GITHUB_STEP_SUMMARY
          echo "wget https://github.com/Meesho/BharatMLStack/releases/download/${{ steps.versions.outputs.release_tag }}/*.whl" >> $GITHUB_STEP_SUMMARY
          echo "pip install *.whl --find-links ." >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY 