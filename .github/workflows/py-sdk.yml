name: Python SDK CI

on:
  pull_request:
    branches: [master, develop]
    paths: ['py-sdk/**']
  push:
    branches: [master, develop]
    paths: ['py-sdk/**']

jobs:
  build-py-sdk:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    defaults:
      run:
        working-directory: ./py-sdk
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('py-sdk/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build pytest flake8 black isort mypy

      - name: Install package in development mode
        run: pip install -e .

      - name: Check code formatting with black
        run: black --check --diff src/ || echo "Black formatting issues found"

      - name: Check import sorting with isort
        run: isort --check-only --diff src/ || echo "Import sorting issues found"

      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings
          flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

      - name: Type checking with mypy
        run: mypy src/ --ignore-missing-imports || echo "Type checking issues found"

      - name: Run tests
        run: |
          if [ -d "tests" ]; then
            pytest tests/ -v
          else
            echo "No tests directory found, skipping tests"
          fi

      - name: Build package
        run: python -m build

      - name: Check package metadata
        run: |
          pip install twine
          twine check dist/*

      - name: Test package installation
        run: |
          pip install dist/*.whl
          python -c "import online_feature_store_py_client; print('Package imported successfully')"

  test-examples:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./py-sdk
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Test import and basic functionality
        run: |
          python -c "
          from online_feature_store_py_client import OnlineFeatureStorePyClient
          print('✓ Package imports successfully')
          print('✓ OnlineFeatureStorePyClient class available')
          " 