name: Go SDK Release

on:
  push:
    branches: [master, develop]
    paths: ['go-sdk/**']

jobs:
  release-go-sdk:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    defaults:
      run:
        working-directory: ./go-sdk
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-sdk-release-${{ hashFiles('go-sdk/go.sum') }}

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Build SDK packages
        run: go build -v ./...

      - name: Determine version
        id: version
        run: |
          # Read version from VERSION file
          if [ ! -f "VERSION" ]; then
            echo "ERROR: VERSION file not found in go-sdk/"
            exit 1
          fi
          
          CURRENT_VERSION=$(cat VERSION | tr -d '\n' | tr -d ' ')
          
          # For develop branch, add pre-release suffix
          if [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            SHORT_SHA=$(git rev-parse --short HEAD)
            NEW_VERSION="${CURRENT_VERSION}-beta.${SHORT_SHA}"
          else
            NEW_VERSION="$CURRENT_VERSION"
          fi
          
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "tag=go-sdk/$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: Create and push tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          git tag -a "${{ steps.version.outputs.tag }}" -m "Release Go SDK ${{ steps.version.outputs.version }}"
          git push origin "${{ steps.version.outputs.tag }}"

      - name: Generate changelog
        id: changelog
        run: |
          LATEST_TAG=$(git tag -l "go-sdk/v*" --sort=-version:refname | head -n2 | tail -n1)
          
          if [ -z "$LATEST_TAG" ]; then
            # No previous tags, show all commits
            COMMITS=$(git log --oneline --grep="go-sdk" -- go-sdk/)
          else
            # Show commits since last tag
            COMMITS=$(git log --oneline "${LATEST_TAG}..${{ steps.version.outputs.tag }}" -- go-sdk/)
          fi
          
          echo "## Changes in Go SDK ${{ steps.version.outputs.version }}" > changelog.md
          echo "" >> changelog.md
          
          if [ -n "$COMMITS" ]; then
            echo "### Commits:" >> changelog.md
            echo "$COMMITS" | sed 's/^/- /' >> changelog.md
          else
            echo "- Minor improvements and bug fixes" >> changelog.md
          fi
          
          echo "" >> changelog.md
          echo "### Installation:" >> changelog.md
          echo '```bash' >> changelog.md
          echo "go get github.com/Meesho/BharatMLStack/go-sdk@${{ steps.version.outputs.version }}" >> changelog.md
          echo '```' >> changelog.md
          echo "" >> changelog.md
          echo "### Usage:" >> changelog.md
          echo '```go' >> changelog.md
          echo 'import "github.com/Meesho/BharatMLStack/go-sdk/pkg/onfs"' >> changelog.md
          echo '```' >> changelog.md

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          release_name: "Go SDK ${{ steps.version.outputs.version }}"
          body_path: go-sdk/changelog.md
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, 'beta') }}

      - name: Generate release summary
        run: |
          echo "## ðŸš€ Go SDK Released Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** ${{ steps.version.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“¦ Installation:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "go get github.com/Meesho/BharatMLStack/go-sdk@${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ”— Links:" >> $GITHUB_STEP_SUMMARY
          echo "- [Release Page](https://github.com/Meesho/BharatMLStack/releases/tag/${{ steps.version.outputs.tag }})" >> $GITHUB_STEP_SUMMARY
          echo "- [Go Module](https://pkg.go.dev/github.com/Meesho/BharatMLStack/go-sdk@${{ steps.version.outputs.version }})" >> $GITHUB_STEP_SUMMARY 