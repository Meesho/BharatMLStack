name: Release Go SDK

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.1.20 or v0.1.20-beta.1)'
        required: true
        type: string
      is_beta:
        description: 'Is this a beta release?'
        required: false
        type: boolean
        default: false
      is_alpha:
        description: 'Is this an alpha release?'
        required: false
        type: boolean
        default: false

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Validate Go SDK
        run: |
          cd go-sdk
          go mod tidy
          go test -v ./...
          go build -v ./...
          go vet ./...

      - name: Create Git tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          TAG="go-sdk/${{ inputs.version }}"
          git tag -a "$TAG" -m "Go SDK release ${{ inputs.version }}"
          git push origin "$TAG"

      - name: Create GitHub Release (Production)
        if: ${{ !inputs.is_beta && !inputs.is_alpha }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: go-sdk/${{ inputs.version }}
          release_name: Go SDK ${{ inputs.version }}
          body: |
            ## Go SDK Release ${{ inputs.version }}
            
            ### Installation
            ```bash
            go get github.com/${{ github.repository }}/go-sdk@${{ inputs.version }}
            ```
            
            ### Features
            - Go client libraries for BharatMLStack
            - Feature store integration
            - Type-safe API bindings
            
            ### Usage
            ```go
            import "github.com/${{ github.repository }}/go-sdk"
            ```
            
            ### Changes
            Please see the commit history for detailed changes.
            
            ### Validation
            - ✅ Tests passed
            - ✅ Build successful
            - ✅ Go vet clean
          draft: false
          prerelease: false

      - name: Create Beta Pre-release
        if: ${{ inputs.is_beta }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: go-sdk/${{ inputs.version }}
          release_name: Go SDK ${{ inputs.version }} (Beta)
          body: |
            ## Go SDK Beta Release ${{ inputs.version }}
            
            ⚠️ **This is a beta release from the develop branch** - Use for testing purposes only.
            
            ### Installation
            ```bash
            go get github.com/${{ github.repository }}/go-sdk@${{ inputs.version }}
            ```
            
            ### Changes
            Please see the commit history for detailed changes.
            
            ### Validation
            - ✅ Tests passed
            - ✅ Build successful
            - ✅ Go vet clean
          draft: false
          prerelease: true

      - name: Create Alpha Pre-release
        if: ${{ inputs.is_alpha }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: go-sdk/${{ inputs.version }}
          release_name: Go SDK ${{ inputs.version }} (Alpha)
          body: |
            ## Go SDK Alpha Release ${{ inputs.version }}
            
            ⚠️ **This is an alpha release from a feature/fix branch** - Experimental build for development and testing.
            
            ### Installation
            ```bash
            go get github.com/${{ github.repository }}/go-sdk@${{ inputs.version }}
            ```
            
            ### Changes
            Please see the commit history for detailed changes.
            
            ### Validation
            - ✅ Tests passed
            - ✅ Build successful
            - ✅ Go vet clean
          draft: false
          prerelease: true 